# This workflow will build PRs submitted to the main branch.

name: 👷 PR Builder

on:
  pull_request:
    branches: [ main ]
    paths:
      - ".github/**"
      - "examples/**"
      - "src/**"
      - "types/**"
  workflow_dispatch:

jobs:
  lint:
    name: 🍀 ESLint (STATIC ANALYSIS)
    strategy:
      matrix:
        node-version: [ 14.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 🛠️ Bootstrap Dependencies
        id: bootstrap-dependencies-with-cache
        run: |
          npm install -g yarn
          yarn install --immutable --immutable-cache --check-cache

      - name: ⏳ Lint
        run: yarn lint

      - name: 🐱 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  typecheck:
    name: ʦ Typecheck (STATIC ANALYSIS)
    strategy:
      matrix:
        node-version: [ 14.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 🛠️ Bootstrap Dependencies
        id: bootstrap-dependencies-with-cache
        run: |
          npm install -g yarn
          yarn install --immutable --immutable-cache --check-cache

      - name: ☄️ Check Type Errors
        run: yarn typecheck

      - name: 🐱 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  test:
    name: 👾 Unit Test (TESTING)
    needs: [ lint, typecheck ]
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3

      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 🛠️ Bootstrap Dependencies
        id: bootstrap-dependencies-with-cache
        run: |
          npm install -g yarn
          yarn install --immutable --immutable-cache --check-cache

      - name: 🃏 Run Jest
        id: run-jest-test
        run: yarn test --ci --coverage --maxWorkers=2

      - name: 🐱 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  build:
    name: 🚧 Build
    needs: [ lint, typecheck, test ]
    strategy:
      matrix:
        node-version: [ 12.x, 14.x, 16.x ]
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v2.3.3

      - name: 🟢 Setup node ${{ matrix.node-version }}
        id: setup-node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'

      - name: 🛠️ Bootstrap Dependencies
        id: bootstrap-dependencies-with-cache
        run: |
          npm install -g yarn
          yarn install --immutable --immutable-cache --check-cache

      - name: 🏗️ Build
        id: build-the-lib
        run: yarn build

      - name: 🐱 Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
